(function (global) {
  const LOG_PREFIX = "[🔎 ECICEP]";

  const patologiasCriticas = {
    F00: 2,
    F000: 2,
    F001: 2,
    F002: 2,
    F009: 2,
    F01: 2,
    F010: 2,
    F011: 2,
    F012: 2,
    F013: 2,
    F018: 2,
    F019: 2,
    F02: 2,
    F020: 2,
    F021: 2,
    F022: 2,
    F023: 2,
    F024: 2,
    F028: 2,
    F03: 2,
    F332: 2,
    F333: 2,
    E10: 2,
    E100: 2,
    E101: 2,
    E102: 2,
    E103: 2,
    E104: 2,
    E105: 2,
    E106: 2,
    E107: 2,
    E108: 2,
    E109: 2,
    E11: 2,
    E110: 2,
    E111: 2,
    E112: 2,
    E113: 2,
    E114: 2,
    E115: 2,
    E116: 2,
    E117: 2,
    E118: 2,
    E119: 2,
    E12: 2,
    E120: 2,
    E121: 2,
    E122: 2,
    E123: 2,
    E124: 2,
    E125: 2,
    E126: 2,
    E127: 2,
    E128: 2,
    E129: 2,
    E13: 2,
    E130: 2,
    E131: 2,
    E132: 2,
    E133: 2,
    E134: 2,
    E135: 2,
    E136: 2,
    E137: 2,
    E138: 2,
    E139: 2,
    E14: 2,
    E140: 2,
    E141: 2,
    E142: 2,
    E143: 2,
    E144: 2,
    E145: 2,
    E146: 2,
    E147: 2,
    E148: 2,
    E149: 2,
    G46: 2,
    G460: 2,
    G461: 2,
    G462: 2,
    G463: 2,
    G464: 2,
    G465: 2,
    G466: 2,
    G467: 2,
    G468: 2,
    I64: 2,
    I67: 2,
    I670: 2,
    I671: 2,
    I672: 2,
    I673: 2,
    I674: 2,
    I675: 2,
    I676: 2,
    I677: 2,
    I678: 2,
    I679: 2,
    I68: 2,
    I680: 2,
    I681: 2,
    I682: 2,
    I688: 2,
    N184: 2,
    N185: 2,
    N186: 2,
    I20: 2,
    I200: 2,
    I201: 2,
    I208: 2,
    I209: 2,
    I21: 2,
    I210: 2,
    I211: 2,
    I212: 2,
    I213: 2,
    I214: 2,
    I215: 2,
    I216: 2,
    I217: 2,
    I218: 2,
    I219: 2,
    I22: 2,
    I220: 2,
    I221: 2,
    I228: 2,
    I229: 2,
    I25: 2,
    I250: 2,
    I251: 2,
    I252: 2,
    I253: 2,
    I254: 2,
    I255: 2,
    I256: 2,
    I257: 2,
    I258: 2,
    I259: 2,
    I51: 2,
    I510: 2,
    I514: 2,
    I515: 2,
    I516: 2,
    I517: 2,
    I518: 2,
    I519: 2,
    I52: 2,
    I520: 2,
    I521: 2,
    I528: 2,
    F20: 2,
    F200: 2,
    F201: 2,
    F202: 2,
    F203: 2,
    F204: 2,
    F205: 2,
    F206: 2,
    F207: 2,
    F208: 2,
    F209: 2,
    F21: 2,
    F22: 2,
    F220: 2,
    F228: 2,
    F229: 2,
    F23: 2,
    F230: 2,
    F231: 2,
    F232: 2,
    F233: 2,
    F238: 2,
    F239: 2,
    R26: 2,
    R260: 2,
    R261: 2,
    R262: 2,
    R268: 2,
    Z74: 2,
    Z740: 2,
    Z741: 2,
    Z742: 2,
    Z743: 2,
    Z748: 2,
    Z749: 2,
    Z99: 2,
    Z990: 2,
    Z991: 2,
    Z992: 2,
    Z993: 2,
    Z998: 2,
    Z999: 2
  };

  const patologiasStandard = {
    F10: 1,
    F100: 1,
    F101: 1,
    F102: 1,
    F103: 1,
    F104: 1,
    F105: 1,
    F106: 1,
    F107: 1,
    F108: 1,
    F109: 1,
    Y91: 1,
    Y912: 1,
    Y913: 1,
    Y919: 1,
    Z71: 1,
    Z714: 1,
    Z716: 1,
    Z72: 1,
    Z720: 1,
    Z721: 1,
    F17: 1,
    F170: 1,
    F171: 1,
    F172: 1,
    F173: 1,
    F174: 1,
    F175: 1,
    F176: 1,
    F177: 1,
    F178: 1,
    F179: 1,
    T65: 1,
    T652: 1,
    F11: 1,
    F110: 1,
    F111: 1,
    F112: 1,
    F113: 1,
    F114: 1,
    F115: 1,
    F116: 1,
    F117: 1,
    F118: 1,
    F119: 1,
    F12: 1,
    F120: 1,
    F121: 1,
    F122: 1,
    F123: 1,
    F124: 1,
    F125: 1,
    F126: 1,
    F127: 1,
    F128: 1,
    F129: 1,
    F13: 1,
    F130: 1,
    F131: 1,
    F132: 1,
    F133: 1,
    F134: 1,
    F135: 1,
    F136: 1,
    F137: 1,
    F138: 1,
    F139: 1,
    F14: 1,
    F140: 1,
    F141: 1,
    F142: 1,
    F143: 1,
    F144: 1,
    F145: 1,
    F146: 1,
    F147: 1,
    F148: 1,
    F149: 1,
    F15: 1,
    F150: 1,
    F151: 1,
    F152: 1,
    F153: 1,
    F154: 1,
    F155: 1,
    F156: 1,
    F157: 1,
    F158: 1,
    F159: 1,
    F16: 1,
    F160: 1,
    F161: 1,
    F162: 1,
    F163: 1,
    F164: 1,
    F165: 1,
    F166: 1,
    F167: 1,
    F168: 1,
    F169: 1,
    F18: 1,
    F180: 1,
    F181: 1,
    F182: 1,
    F183: 1,
    F184: 1,
    F185: 1,
    F186: 1,
    F187: 1,
    F188: 1,
    F189: 1,
    F19: 1,
    F190: 1,
    F191: 1,
    F192: 1,
    F193: 1,
    F194: 1,
    F195: 1,
    F196: 1,
    F197: 1,
    F198: 1,
    F199: 1,
    D50: 1,
    D51: 1,
    D510: 1,
    D511: 1,
    D512: 1,
    D513: 1,
    D518: 1,
    D519: 1,
    D52: 1,
    D520: 1,
    D521: 1,
    D528: 1,
    D529: 1,
    D53: 1,
    D530: 1,
    D531: 1,
    D532: 1,
    D538: 1,
    D539: 1,
    D55: 1,
    D550: 1,
    D551: 1,
    D552: 1,
    D553: 1,
    D558: 1,
    D559: 1,
    D56: 1,
    D560: 1,
    D561: 1,
    D562: 1,
    D563: 1,
    D564: 1,
    D568: 1,
    D569: 1,
    D57: 1,
    D570: 1,
    D571: 1,
    D572: 1,
    D573: 1,
    D578: 1,
    D58: 1,
    D580: 1,
    D581: 1,
    D582: 1,
    D588: 1,
    D589: 1,
    D59: 1,
    D590: 1,
    D591: 1,
    D592: 1,
    D593: 1,
    D594: 1,
    D595: 1,
    D596: 1,
    D598: 1,
    D599: 1,
    D60: 1,
    D600: 1,
    D601: 1,
    D608: 1,
    D609: 1,
    D61: 1,
    D610: 1,
    D611: 1,
    D612: 1,
    D613: 1,
    D618: 1,
    D619: 1,
    D62: 1,
    D63: 1,
    D630: 1,
    D638: 1,
    D64: 1,
    D640: 1,
    D641: 1,
    D642: 1,
    D643: 1,
    D644: 1,
    D648: 1,
    D649: 1,
    F50: 1,
    F500: 1,
    F501: 1,
    F502: 1,
    F503: 1,
    F504: 1,
    F505: 1,
    F508: 1,
    F509: 1,
    M05: 1,
    M050: 1,
    M051: 1,
    M052: 1,
    M053: 1,
    M058: 1,
    M059: 1,
    M06: 1,
    M060: 1,
    M061: 1,
    M062: 1,
    M063: 1,
    M064: 1,
    M068: 1,
    M069: 1,
    M15: 1,
    M150: 1,
    M151: 1,
    M152: 1,
    M153: 1,
    M154: 1,
    M158: 1,
    M159: 1,
    M16: 1,
    M160: 1,
    M161: 1,
    M162: 1,
    M163: 1,
    M164: 1,
    M165: 1,
    M166: 1,
    M167: 1,
    M169: 1,
    M17: 1,
    M170: 1,
    M171: 1,
    M172: 1,
    M173: 1,
    M174: 1,
    M175: 1,
    M179: 1,
    M18: 1,
    M180: 1,
    M181: 1,
    M182: 1,
    M183: 1,
    M184: 1,
    M185: 1,
    M189: 1,
    M19: 1,
    M190: 1,
    M191: 1,
    M192: 1,
    M199: 1,
    J45: 1,
    J450: 1,
    J451: 1,
    J458: 1,
    J459: 1,
    J46: 1,
    H25: 1,
    H250: 1,
    H251: 1,
    H252: 1,
    H258: 1,
    H259: 1,
    H26: 1,
    H260: 1,
    H261: 1,
    H262: 1,
    H263: 1,
    G30: 1,
    G300: 1,
    G301: 1,
    G308: 1,
    G309: 1,
    H54: 1,
    H540: 1,
    H541: 1,
    H542: 1,
    H543: 1,
    H544: 1,
    H545: 1,
    H546: 1,
    H547: 1,
    E78: 1,
    E780: 1,
    E781: 1,
    E782: 1,
    E783: 1,
    E784: 1,
    E785: 1,
    E786: 1,
    E788: 1,
    E789: 1,
    G45: 1,
    G450: 1,
    G451: 1,
    G452: 1,
    G453: 1,
    G454: 1,
    G458: 1,
    G459: 1,
    B18: 1,
    B180: 1,
    B181: 1,
    B182: 1,
    B188: 1,
    B189: 1,
    K70: 1,
    K700: 1,
    K701: 1,
    K702: 1,
    K703: 1,
    K704: 1,
    K709: 1,
    K71: 1,
    K710: 1,
    K711: 1,
    K712: 1,
    K713: 1,
    K714: 1,
    K715: 1,
    K716: 1,
    K717: 1,
    K718: 1,
    K719: 1,
    K72: 1,
    K721: 1,
    K73: 1,
    K730: 1,
    K731: 1,
    K732: 1,
    K738: 1,
    K739: 1,
    K74: 1,
    K740: 1,
    K741: 1,
    K742: 1,
    K743: 1,
    K744: 1,
    K745: 1,
    K746: 1,
    J41: 1,
    J410: 1,
    J411: 1,
    J418: 1,
    J42: 1,
    J43: 1,
    J431: 1,
    J432: 1,
    J438: 1,
    J439: 1,
    J44: 1,
    J440: 1,
    J441: 1,
    J448: 1,
    J449: 1,
    N15: 1,
    N150: 1,
    N151: 1,
    N158: 1,
    N159: 1,
    N18: 1,
    N180: 1,
    N181: 1,
    N182: 1,
    N183: 1,
    N189: 1,
    N19: 1,
    N190: 1,
    N191: 1,
    N198: 1,
    N199: 1,
    K50: 1,
    K500: 1,
    K501: 1,
    K509: 1,
    K508: 1,
    K51: 1,
    K510: 1,
    K511: 1,
    K518: 1,
    K519: 1,
    K512: 1,
    K513: 1,
    K528: 1,
    K529: 1,
    K52: 1,
    K520: 1,
    K521: 1,
    K522: 1,
    K523: 1,
    G40: 1,
    G400: 1,
    G401: 1,
    G402: 1,
    G403: 1,
    G404: 1,
    G406: 1,
    G408: 1,
    G409: 1,
    G407: 1,
    G35: 1,
    I48: 1,
    I480: 1,
    I481: 1,
    I482: 1,
    I483: 1,
    I484: 1,
    I489: 1,
    H40: 1,
    H401: 1,
    H402: 1,
    H403: 1,
    H404: 1,
    H405: 1,
    H406: 1,
    H408: 1,
    H409: 1,
    H42: 1,
    H420: 1,
    H428: 1,
    M10: 1,
    I10: 1,
    I100: 1,
    I109: 1,
    I11: 1,
    I110: 1,
    I119: 1,
    I12: 1,
    I120: 1,
    I129: 1,
    I13: 1,
    I130: 1,
    I131: 1,
    I132: 1,
    I139: 1,
    I50: 1,
    I500: 1,
    I501: 1,
    I509: 1,
    N40: 1,
    E01: 1,
    E010: 1,
    E011: 1,
    E012: 1,
    E02: 1,
    E03: 1,
    E030: 1,
    E031: 1,
    E032: 1,
    E033: 1,
    E034: 1,
    E035: 1,
    E038: 1,
    E039: 1,
    E05: 1,
    E050: 1,
    E051: 1,
    E052: 1,
    E053: 1,
    E054: 1,
    E055: 1,
    E058: 1,
    E059: 1,
    B21: 1,
    B210: 1,
    B211: 1,
    B212: 1,
    B213: 1,
    B217: 1,
    B218: 1,
    B219: 1,
    B22: 1,
    B220: 1,
    B221: 1,
    B222: 1,
    B227: 1,
    B23: 1,
    B230: 1,
    B231: 1,
    B232: 1,
    B238: 1,
    B24: 1,
    L93: 1,
    L930: 1,
    L931: 1,
    L932: 1,
    M32: 1,
    M320: 1,
    M321: 1,
    M328: 1,
    M329: 1,
    C: 1,
    D48: 1,
    T74: 1,
    T740: 1,
    T741: 1,
    T742: 1,
    T743: 1,
    T748: 1,
    T749: 1,
    Y07: 1,
    Y070: 1,
    Y071: 1,
    Y072: 1,
    Y073: 1,
    Y078: 1,
    Y079: 1,
    G50: 1,
    G500: 1,
    G501: 1,
    G508: 1,
    G509: 1,
    M79: 1,
    M797: 1,
    E66: 1,
    E660: 1,
    E661: 1,
    E662: 1,
    E669: 1,
    E668: 1,
    G20: 1,
    G21: 1,
    G211: 1,
    G22: 1,
    G23: 1,
    G230: 1,
    G231: 1,
    G232: 1,
    G238: 1,
    G239: 1,
    G24: 1,
    G240: 1,
    G241: 1,
    G242: 1,
    G244: 1,
    G245: 1,
    G248: 1,
    G249: 1,
    G25: 1,
    G252: 1,
    G253: 1,
    G254: 1,
    G255: 1,
    G26: 1,
    H90: 1,
    H900: 1,
    H901: 1,
    H902: 1,
    H903: 1,
    H904: 1,
    H905: 1,
    H906: 1,
    H907: 1,
    H908: 1,
    H91: 1,
    H910: 1,
    H911: 1,
    H912: 1,
    H918: 1,
    H919: 1,
    H913: 1,
    D68: 1,
    D680: 1,
    D681: 1,
    D682: 1,
    D684: 1,
    D688: 1,
    D689: 1,
    D69: 1,
    D690: 1,
    D692: 1,
    D694: 1,
    D696: 1,
    D698: 1,
    D699: 1,
    D75: 1,
    D750: 1,
    D758: 1,
    D759: 1,
    D77: 1,
    F70: 1,
    F700: 1,
    F701: 1,
    F708: 1,
    F709: 1,
    F71: 1,
    F710: 1,
    F711: 1,
    F718: 1,
    F719: 1,
    F72: 1,
    F720: 1,
    F721: 1,
    F728: 1,
    F729: 1,
    F73: 1,
    F730: 1,
    F731: 1,
    F738: 1,
    F739: 1,
    F78: 1,
    F780: 1,
    F781: 1,
    F788: 1,
    F789: 1,
    F79: 1,
    F790: 1,
    F791: 1,
    F798: 1,
    F799: 1,
    I47: 1,
    I470: 1,
    I471: 1,
    I472: 1,
    I479: 1,
    I49: 1,
    I490: 1,
    I498: 1,
    I499: 1,
    F40: 1,
    F400: 1,
    F401: 1,
    F402: 1,
    F408: 1,
    F409: 1,
    F41: 1,
    F410: 1,
    F411: 1,
    F412: 1,
    F413: 1,
    F418: 1,
    F419: 1,
    F42: 1,
    F422: 1,
    F429: 1,
    F428: 1,
    F60: 1,
    F600: 1,
    F601: 1,
    F602: 1,
    F603: 1,
    F604: 1,
    F605: 1,
    F606: 1,
    F607: 1,
    F608: 1,
    F609: 1,
    F61: 1,
    F62: 1,
    F620: 1,
    F621: 1,
    F628: 1,
    F629: 1,
    F68: 1,
    F680: 1,
    F69: 1,
    F51: 1,
    F510: 1,
    F511: 1,
    F512: 1,
    F514: 1,
    F519: 1,
    F518: 1,
    G47: 1,
    G473: 1,
    G474: 1,
    G478: 1,
    G479: 1,
    F31: 1,
    F310: 1,
    F311: 1,
    F312: 1,
    F313: 1,
    F314: 1,
    F315: 1,
    F316: 1,
    F317: 1,
    F318: 1,
    F319: 1,
    F32: 1,
    F320: 1,
    F321: 1,
    F322: 1,
    F323: 1,
    F328: 1,
    F329: 1,
    F33: 1,
    F330: 1,
    F331: 1,
    F334: 1,
    F338: 1,
    F339: 1,
    F34: 1,
    F340: 1,
    F341: 1,
    F348: 1,
    F349: 1,
    F63: 1,
    F630: 1,
    F632: 1,
    F638: 1,
    F639: 1,
    F66: 1,
    F661: 1,
    F662: 1,
    F668: 1,
    F669: 1,
    A15: 1,
    A150: 1,
    A151: 1,
    A152: 1,
    A153: 1,
    A154: 1,
    A155: 1,
    A157: 1,
    A158: 1,
    A159: 1,
    A156: 1,
    A17: 1,
    A170: 1,
    A171: 1,
    A178: 1,
    A179: 1,
    A18: 1,
    A180: 1,
    A181: 1,
    A182: 1,
    A183: 1,
    A184: 1,
    A185: 1,
    A186: 1,
    A187: 1,
    A188: 1,
    A19: 1,
    A190: 1,
    A191: 1,
    A192: 1,
    A198: 1,
    A199: 1,
    L97: 1,
    I83: 1,
    I830: 1,
    I831: 1,
    I832: 1,
    I839: 1,
    L98: 1,
    L984: 1
  };

  function normalizarCie10(cie10Raw) {
    if (!cie10Raw) return "";
    return String(cie10Raw).replace(/\./g, "").toUpperCase();
  }

  function obtenerBase(cie10Normalizado) {
    if (!cie10Normalizado) return "";
    return cie10Normalizado.substring(0, 3);
  }

  function clasificarCategoria(puntajeTotal, tieneCriticas, detallePatologias, totalPatologias) {
    let categoriaCalculada = "G0";
    let descripcionCategoria = "";

    if (puntajeTotal === 0) {
      categoriaCalculada = "G0";
      descripcionCategoria =
        detallePatologias.length === 0 && totalPatologias > 0
          ? "Patologías no catalogadas en ECICEP"
          : "Sin riesgo";
    } else if (puntajeTotal === 1) {
      categoriaCalculada = "G1";
      descripcionCategoria = "Riesgo BAJO (1 condición)";
    } else if (puntajeTotal >= 2 && puntajeTotal <= 4) {
      categoriaCalculada = "G2";
      descripcionCategoria = "Riesgo MODERADO (2-4 puntos)";
    } else if (puntajeTotal >= 5) {
      categoriaCalculada = "G3";
      descripcionCategoria = "Riesgo ALTO (5+ puntos)";
    }

    if (tieneCriticas && categoriaCalculada === "G1") {
      categoriaCalculada = "G2";
      descripcionCategoria = "Riesgo MODERADO (por patología crítica)";
    }

    return { categoriaCalculada, descripcionCategoria };
  }

  function calcular(patologiasInput) {
    const patologias = Array.isArray(patologiasInput) ? patologiasInput : [];

    console.log(`${LOG_PREFIX} ═══════════════════════════════════════`);
    console.log(`${LOG_PREFIX} INICIANDO CÁLCULO DE RIESGO`);
    console.log(`${LOG_PREFIX} Patologías recibidas: ${patologias.length}`);

    if (!patologias.length) {
      console.warn(`${LOG_PREFIX} No hay patologías para calcular`);
      return {
        categoriaCalculada: "G0",
        puntajeTotal: 0,
        descripcionCategoria: "Sin riesgo",
        detallePatologias: [],
        tieneCriticas: false,
        patologiasCatalogadas: []
      };
    }

    let puntajeTotal = 0;
    const detallePatologias = [];
    const patologiasCatalogadas = [];
    let tieneCriticas = false;

    patologias.forEach((pat) => {
      const cie10Raw = pat?.cie10 || pat?.CIE10 || pat?.codigo_cie10 || "";
      const nombrePatologia =
        pat?.nombre || pat?.NOMBRE || pat?.nombre_patologia || "Sin nombre";

      const cie10Normalizado = normalizarCie10(cie10Raw);
      const cie10Base = obtenerBase(cie10Normalizado);

      console.log(
        `${LOG_PREFIX} Analizando: ${cie10Raw} → Base ${cie10Base} → ${nombrePatologia}`
      );
      console.log(`${LOG_PREFIX} Objeto completo:`, pat);

      let puntos = 0;
      let categoriaTexto = "No catalogada";

      if (patologiasCriticas[cie10Base] || patologiasCriticas[cie10Normalizado]) {
        puntos = 2;
        categoriaTexto = "⚠️ CRÍTICA";
        tieneCriticas = true;
        console.log(`${LOG_PREFIX}  ✅ CRÍTICA: ${cie10Base} = 2 puntos`);
      } else if (
        patologiasStandard[cie10Base] || patologiasStandard[cie10Normalizado]
      ) {
        puntos = 1;
        categoriaTexto = "Moderada";
        console.log(`${LOG_PREFIX}  ✅ MODERADA: ${cie10Base} = 1 punto`);
      } else {
        console.log(
          `${LOG_PREFIX}  ⚠️ NO CATALOGADA: ${cie10Base} = 0 puntos (no suma al total)`
        );
      }

      if (puntos > 0) {
        puntajeTotal += puntos;
        const detalle = `• ${cie10Raw}: ${nombrePatologia} [${puntos} pt${
          puntos !== 1 ? "s" : ""
        } - ${categoriaTexto}]`;
        detallePatologias.push(detalle);
        patologiasCatalogadas.push({
          cie10: cie10Raw,
          nombre: nombrePatologia,
          puntos,
          categoria: categoriaTexto
        });
      }
    });

    console.log(`${LOG_PREFIX} Puntaje total: ${puntajeTotal} puntos`);
    console.log(
      `${LOG_PREFIX} Detalle patologías catalogadas (${detallePatologias.length}):`,
      detallePatologias
    );

    if (detallePatologias.length === 0 && patologias.length > 0) {
      console.warn(
        `${LOG_PREFIX} ⚠️ El usuario tiene ${patologias.length} patologías pero NINGUNA está en el catálogo ECICEP`
      );
    }

    const { categoriaCalculada, descripcionCategoria } = clasificarCategoria(
      puntajeTotal,
      tieneCriticas,
      detallePatologias,
      patologias.length
    );

    console.log(
      `${LOG_PREFIX} RESULTADO FINAL → ${categoriaCalculada} (${descripcionCategoria})`
    );

    return {
      categoriaCalculada,
      puntajeTotal,
      descripcionCategoria,
      detallePatologias,
      tieneCriticas,
      patologiasCatalogadas
    };
  }

  global.RiesgoECICEP = global.RiesgoECICEP || {};
  global.RiesgoECICEP.calcular = calcular;
})(window);
